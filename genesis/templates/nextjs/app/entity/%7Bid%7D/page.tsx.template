'use client';

import { useEffect, useState } from 'react';
import { useParams, useRouter } from 'next/navigation';
import { use{{$ entity_type $}}Store } from '../../../store/{{$ entity_name $}}Store';
import { ArrowLeft, Edit, Trash2 } from 'lucide-react';
import Link from 'next/link';

export default function {{$ entity_type $}}DetailPage() {
  const params = useParams();
  const router = useRouter();
  const id = params.id as string;

  const { selectedItem, isLoading, error, fetchById, deleteItem } = use{{$ entity_type $}}Store();
  const [isDeleting, setIsDeleting] = useState(false);

  useEffect(() => {
    fetchById(id);
  }, [id, fetchById]);

  const confirmDelete = () => {
    if (window.confirm('Are you sure you want to delete this item?')) {
      handleDelete();
    }
  };

  const handleDelete = async () => {
    setIsDeleting(true);
    try {
      await deleteItem(id);
      router.push('/{{$ entity_name $}}s');
    } catch (error) {
      console.error('Error deleting item:', error);
      setIsDeleting(false);
    }
  };

  if (isLoading) {
    return <div className="flex justify-center p-8"><div className="animate-spin h-8 w-8 border-t-2 border-b-2 border-blue-500 rounded-full"></div></div>;
  }

  if (error) {
    return <div className="p-4 bg-red-50 text-red-500 rounded-md">{error}</div>;
  }

  const item = selectedItem;

  if (!item) {
    return <div className="p-4 bg-yellow-50 text-yellow-700 rounded-md">{{$ entity_type $}} not found</div>;
  }

  return (
    <div className="max-w-4xl mx-auto">
      <div className="mb-4">
        <Link
          href="/{{$ entity_name $}}s"
          className="text-blue-600 hover:text-blue-800 flex items-center"
        >
          <ArrowLeft className="w-4 h-4 mr-1" /> Back to {{$ entity_type $}}s
        </Link>
      </div>

      <div className="mb-6 bg-white rounded-lg shadow-md overflow-hidden">
        <div className="p-6">
          <h1 className="text-2xl font-bold mb-4">{item.name}</h1>
          {item.description && (
            <p className="text-gray-700 mb-4">{item.description}</p>
          )}
          <div className="flex space-x-4 mt-6">
            <button
              onClick={() => router.push(`/{{$ entity_name $}}s/${id}/edit`)}
              className="px-4 py-2 bg-blue-100 text-blue-600 rounded hover:bg-blue-200 flex items-center"
            >
              <Edit className="w-4 h-4 mr-2" />
              Edit
            </button>
            <button
              onClick={confirmDelete}
              className="px-4 py-2 bg-red-100 text-red-600 rounded hover:bg-red-200 flex items-center"
              disabled={isDeleting}
            >
              <Trash2 className="w-4 h-4 mr-2" />
              {isDeleting ? 'Deleting...' : 'Delete'}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
