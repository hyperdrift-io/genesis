'use client';

import { useEffect } from 'react';
import { use{{$ entity_type $}}Store } from '../../store/{{$ entity_name $}}Store';
import {{$ entity_type $}}Card from '../../components/{{$ entity_type $}}Card';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { PlusCircle } from 'lucide-react';

export default function {{$ entity_type $}}ListPage() {
  // This JSX code will be output as-is after template rendering
  // The {{$ ... $}} variables will be replaced by Jinja2

  const { items, isLoading, error, fetchItems } = use{{$ entity_type $}}Store();

  useEffect(() => {
    fetchItems();
  }, [fetchItems]);

  if (isLoading) {
    return (
      <div className="flex justify-center items-center h-48">
        <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 p-4 rounded-md border border-red-200">
        <h2 className="text-red-700 text-lg font-semibold">Error loading items</h2>
        <p className="text-red-600">{error}</p>
      </div>
    );
  }

  // These sample items will be available in the rendered component
  const sampleItem1 = { id: 'sample1', name: 'Sample Item 1', description: 'This is a sample.' };
  const sampleItem2 = { id: 'sample2', name: 'Sample Item 2', description: 'Another example item.' };

  return (
    <div className="space-y-6">
      <section>
        <h1 className="text-3xl font-bold mb-4">{{$ entity_type $}}s</h1>

        <div className="mb-4 flex justify-between">
          <p className="text-gray-600">Manage your {{$ entity_name $}}s</p>
          <Link
            href="/{{$ entity_name $}}s/new"
            className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 inline-flex items-center"
          >
            <PlusCircle className="w-4 h-4 mr-2" />
            Add New {{$ entity_type $}}
          </Link>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {%$ if show_sample_items $%}
            {/* Sample items for demonstration */}
            <{{$ entity_type $}}Card {{$ entity_name $}}={sampleItem1} />
            <{{$ entity_type $}}Card {{$ entity_name $}}={sampleItem2} />
          {%$ endif $%}
        </div>
      </section>

      <div className="mt-6">
        {%$ if has_items $%}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {/* This comment will be in the final output */}
            {/* The map function will be output as-is, not processed by Jinja */}
            {items.map((item) => (
              <{{$ entity_type $}}Card key={item.id} {{$ entity_name $}}={item} />
            ))}
          </div>
        {%$ else $%}
          <div className="bg-yellow-50 p-4 rounded-md border border-yellow-200">
            <p className="text-yellow-700">No {{$ entity_name $}}s found. Create your first one!</p>
          </div>
        {%$ endif $%}
      </div>
    </div>
  );
}
