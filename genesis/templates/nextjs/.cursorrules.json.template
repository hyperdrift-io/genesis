{
  "rules": [
    {
      "pattern": "tailwindcss",
      "message": "Tailwind CSS v4: https://tailwindcss.com/docs/installation/framework-guides/nextjs"
    },
    {
      "pattern": "shadcn/ui",
      "message": "shadcn/ui Components: https://ui.shadcn.com/docs"
    },
    {
      "pattern": "lucide-react",
      "message": "Lucide Icons: https://lucide.dev/guide/installation - Icon Gallery: https://lucide.dev/icons"
    },
    {
      "pattern": "zustand",
      "message": "Zustand State Management: https://github.com/pmndrs/zustand"
    },
    {
      "pattern": "@supabase/supabase-js",
      "message": "Supabase SDK: https://supabase.com/docs/reference/javascript"
    },
    {
      "pattern": "@radix-ui",
      "message": "Radix UI Primitives: https://www.radix-ui.com/primitives/docs/overview/introduction"
    },
    {
      "pattern": "cn\\(.*\\)",
      "message": "Class utility function using tailwind-merge and clsx: https://ui.shadcn.com/docs/installation#add-the-cn-utility"
    },
    {
      "pattern": "class-variance-authority",
      "message": "CVA for creating component variants: https://cva.style/docs"
    },
    {
      "pattern": "Button",
      "message": "Button Component API: https://ui.shadcn.com/docs/components/button"
    },
    {
      "pattern": "Card",
      "message": "Card Component API: https://ui.shadcn.com/docs/components/card"
    },
    {
      "pattern": "Input",
      "message": "Input Component API: https://ui.shadcn.com/docs/components/input"
    },
    {
      "pattern": "Textarea",
      "message": "Textarea Component API: https://ui.shadcn.com/docs/components/textarea"
    },
    {
      "pattern": "Label",
      "message": "Label Component API: https://ui.shadcn.com/docs/components/label"
    },
    {
      "pattern": "CURSOR_RULE: UI Components Guide",
      "message": "Follow the shadcn/ui design system and component API. See: https://ui.shadcn.com/docs/theming"
    },
    {
      "pattern": "CURSOR_RULE: REPLACE_WITH_SUPABASE",
      "message": "Replace local storage implementation with Supabase persistence: https://supabase.com/docs/guides/getting-started/tutorials/with-nextjs"
    }
  ],
  "docLinks": {
    "tailwindConfig": "https://tailwindcss.com/docs/configuration",
    "shadcnUI": "https://ui.shadcn.com/docs",
    "lucideIcons": "https://lucide.dev/guide",
    "nextjs": "https://nextjs.org/docs",
    "supabase": "https://supabase.com/docs",
    "zustand": "https://docs.pmnd.rs/zustand/getting-started/introduction",
    "radixUI": "https://www.radix-ui.com/primitives/docs/components/accordion"
  },
  "libraryCheatsheet": {
    "Tailwind CSS": {
      "description": "Utility-first CSS framework",
      "version": "4.0.0-alpha.2",
      "websiteURL": "https://tailwindcss.com/",
      "docsURL": "https://tailwindcss.com/docs/installation/framework-guides/nextjs"
    },
    "shadcn/ui": {
      "description": "Re-usable component library built with Radix UI and Tailwind",
      "websiteURL": "https://ui.shadcn.com/",
      "docsURL": "https://ui.shadcn.com/docs"
    },
    "Lucide Icons": {
      "description": "Beautiful & consistent icon toolkit",
      "version": "0.312.0",
      "websiteURL": "https://lucide.dev/",
      "docsURL": "https://lucide.dev/guide/installation",
      "iconGallery": "https://lucide.dev/icons"
    },
    "Zustand": {
      "description": "Small, fast and scalable state management",
      "version": "4.5.0",
      "websiteURL": "https://zustand-demo.pmnd.rs/",
      "docsURL": "https://docs.pmnd.rs/zustand/getting-started/introduction"
    },
    "Supabase": {
      "description": "Open source Firebase alternative",
      "version": "2.39.3",
      "websiteURL": "https://supabase.com/",
      "docsURL": "https://supabase.com/docs"
    },
    "Radix UI": {
      "description": "Unstyled, accessible components for building highâ€‘quality design systems",
      "websiteURL": "https://www.radix-ui.com/primitives",
      "docsURL": "https://www.radix-ui.com/primitives/docs/overview/introduction"
    },
    "clsx": {
      "description": "Utility for constructing className strings conditionally",
      "version": "2.1.0",
      "websiteURL": "https://github.com/lukeed/clsx",
      "docsURL": "https://github.com/lukeed/clsx#usage"
    },
    "tailwind-merge": {
      "description": "Merge Tailwind CSS classes without style conflicts",
      "version": "2.2.0",
      "websiteURL": "https://github.com/dcastil/tailwind-merge",
      "docsURL": "https://github.com/dcastil/tailwind-merge/blob/v2.2.0/docs/what-it-does.md"
    }
  }
}
